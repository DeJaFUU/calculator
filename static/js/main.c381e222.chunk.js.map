{"version":3,"sources":["store/actions/actionTypes.js","store/reducers/rootReducer.js","components/ResultScreen.js","components/ComputationScreen.js","components/Screen.js","components/KeypadRow.js","components/Button.js","container/display.js","store/actions/operators.js","App.js","serviceWorker.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","ADD_NUMBER","ADD_OPERATOR","DECIMAL","CLEAR","EQUALS","REVERT","PERCENTAGE","DELETED","updateObject","oldObject","updatedProperties","Object","C_Users_Cosmos_calculator_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","initialState","updatedNumber","display","currState","lastNumber","decimal","operator","addNumber","state","action","value","addOperator","equals","Number","eval","clear","revert","percentage","deleted","substring","length","rootReducer","arguments","undefined","type","actionTypes","resultScreen","props","react_default","a","createElement","className","children","computationScreen","screen","ResultScreen","ComputationScreen","keypadRow","button","classes","push","join","onClick","clicked","Display","_this","this","Screen","KeypadRow","Button","id","onPercentage","onClear","onDeleted","onPressOperator","onPressNumber","onRevert","onDecimal","onPressEquals","Component","connect","prevState","history","dispatch","num","actions","op","App","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","react_redux_es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c381e222.chunk.js","sourcesContent":["export const ADD_NUMBER = \"ADD_NUMBER\";\r\nexport const ADD_OPERATOR = \"ADD_OPERATOR\";\r\n\r\n\r\nexport const DECIMAL = \"DECIMAL\";\r\nexport const CLEAR = \"CLEAR\";\r\nexport const EQUALS = \"EQUALS\";\r\nexport const REVERT = \"REVERT\";\r\nexport const PERCENTAGE = \"PERCENTAGE\";\r\nexport const DELETED = \"DELETED\";","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst updateObject = (oldObject, updatedProperties) => {\r\n\treturn {\r\n\t\t...oldObject,\r\n\t\t...updatedProperties\r\n\t}\r\n}\r\n\r\n\r\nconst initialState = {\r\n\tupdatedNumber: \"\",\r\n\tdisplay: \"\",\r\n\tcurrState: \"\",\r\n\tlastNumber: \"\",\r\n\tdecimal: false,\r\n\toperator: \"\"\r\n};\r\n\r\n\r\nconst addNumber = (state, action) => {\r\n\treturn updateObject(state, {display: state.display + action.value,\r\n\t\t\t\t\t\t\t\tlastNumber: state.display + action.value});\r\n}\r\n\r\nconst addOperator = (state, action) => {\r\n\treturn updateObject(state, {currState: !state.currState ? state.display : state.currState,\r\n\t\t\t\t\t\t\t\tupdatedNumber: state.display ? state.display : state.updatedNumber,\r\n\t\t\t\t\t\t\t\tdisplay: initialState.display,\r\n\t\t\t\t\t\t\t\toperator: action.operator,\r\n\t\t\t\t\t\t\t\tdecimal: false});\r\n}\r\n\r\nconst equals = (state, action) => {\r\n\tconst updatedNumber = Number(state.currState) + state.operator + Number(state.lastNumber);\r\n\treturn updateObject(state, \t{display: eval(updatedNumber),\r\n\t\t\t\t\t\t\t\tcurrState: eval(updatedNumber),\r\n\t\t\t\t\t\t\t\tupdatedNumber: updatedNumber,\r\n\t\t\t\t\t\t\t\tdecimal: false})\r\n}\r\n\r\nconst clear = (state, action) => {\r\n\treturn updateObject(state, initialState);\r\n}\r\n\r\nconst revert = (state, action) => {\r\n\treturn updateObject(state, {display: state.display * -1,\r\n\t\t\t\t\t\t\t\tlastNumber: state.display *-1});\r\n}\r\n\r\nconst percentage = (state, action) => {\r\n\treturn updateObject(state, {display: state.display / 100,\r\n\t\t\t\t\t\t\t\tcurrState: state.display / 100,\r\n\t\t\t\t\t\t\t\tupdatedNumber: state.display + \"/100\",\r\n\t\t\t\t\t\t\t\tdecimal: true});\r\n}\r\n\r\nconst deleted = (state, action) => {\r\n\treturn updateObject(state, {display: !Number(state.display) ? state.display.substring(0, state.display.length -1) : \"\",\r\n\t\t\t\t\t\t\t\tlastNumber: !Number(state.display) ? state.lastNumber.substring(0, state.lastNumber.length -1) : \"\",\r\n\t\t\t\t\t\t\t\tupdatedNumber: eval(state.updatedNumber)});\r\n}\r\n\r\nconst decimal = (state, action) => {\r\n\treturn updateObject(state, {display: state.display + action.decimal,\r\n\t\t\t\t\t\t\t\tdecimal: true});\r\n}\r\n\r\nconst rootReducer = (state = initialState , action) => {\r\n\tswitch(action.type){\r\n\t\tcase actionTypes.ADD_NUMBER: return addNumber(state, action);\r\n\t\tcase actionTypes.ADD_OPERATOR: return addOperator(state, action);\r\n\t\tcase actionTypes.EQUALS: return equals(state, action);\r\n\t\tcase actionTypes.CLEAR: return clear(state, action);\r\n\t\tcase actionTypes.DECIMAL: return decimal(state, action);\r\n\t\tcase actionTypes.REVERT: return revert(state, action);\r\n\t\tcase actionTypes.PERCENTAGE: return percentage(state, action);\r\n\t\tcase actionTypes.DELETED: return deleted(state, action);\r\n\t\tdefault: return state;\r\n\t}\r\n};\r\n\r\n\r\n\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport \"../styles/styles.css\";\r\n\r\nconst resultScreen = (props) => (\r\n  <div className=\"result-screen\">\r\n   \t\t{props.children} \r\n  </div>\r\n);\r\nexport default resultScreen;","import React from 'react';\r\nimport \"../styles/styles.css\";\r\n\r\nconst computationScreen = (props) => (\r\n  <div className=\"computation-screen\">\r\n  \t\t{props.children} \r\n  </div>\r\n);\r\n\r\nexport default computationScreen;","import React from 'react';import ResultScreen from './ResultScreen';\r\nimport ComputationScreen from './ComputationScreen';\r\n\r\nconst screen = (props) => (\r\n  <section className=\"screen\">\r\n    <ResultScreen> {props.display} </ResultScreen>\r\n    <ComputationScreen> {props.updatedNumber} </ComputationScreen>\r\n  </section>\r\n);\r\n\r\nexport default screen;","import \"../styles/styles.css\";\r\nimport React from 'react';\r\n\r\nconst keypadRow = (props) => (\r\n  <div className=\"keypad__row\">\r\n    \t{props.children}  \r\n    </div>\r\n);\r\n\r\n\r\nexport default keypadRow;","import React from 'react';\r\nimport \"../styles/styles.css\";\r\n\r\nconst button = (props) => {  \r\n\tconst classes = ['btn'];  \r\n\tif (typeof props !== 'undefined' && typeof props.type !== 'undefined')\r\n    \tclasses.push('btn--' + props.type);\r\n  \treturn (\r\n    \t<button className={classes.join(' ')} onClick={props.clicked}>\r\n      \t\t{props.children}\r\n   \t\t</button>\r\n  );\r\n}\r\n\r\nexport default button;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../store/actions/operators\";\r\nimport \"../styles/styles.css\";\r\nimport Screen from \"../components/Screen\";\r\nimport KeypadRow from \"../components/KeypadRow\";\r\nimport Button from \"../components/Button\"\r\n\r\n\r\nclass Display extends Component {\r\n\trender(){\t\r\n\t\treturn (\r\n\t\t<div className=\"Display\">\r\n\t\t<Screen display={this.props.display} updatedNumber={this.props.updatedNumber}/>\r\n\t\t<KeypadRow>\r\n\t\t <Button id=\"percentage\" type=\"operator\" clicked={this.props.onPercentage}>%</Button>\r\n\t\t <Button id=\"clear\" type=\"primary\" clicked={this.props.onClear}>c</Button>\r\n\t\t <Button id=\"deleted\" type=\"primary\" clicked={this.props.onDeleted}>del</Button>\r\n\t\t <Button id=\"divide\" type=\"operator\" clicked={() => this.props.onPressOperator(\"/\")}>/</Button>\r\n\t\t\t\t</KeypadRow>\r\n\t\t\t\t<KeypadRow>\r\n\t\t <Button id=\"seven\" clicked={() => this.props.onPressNumber(7)}>7</Button>\r\n\t\t <Button id=\"eight\" clicked={() => this.props.onPressNumber(8)}>8</Button>\r\n\t\t <Button id=\"nine\" clicked={() => this.props.onPressNumber(9)}>9</Button>\r\n\t\t <Button id=\"multiply\" type=\"operator\" clicked={() => this.props.onPressOperator(\"*\")}>*</Button>\r\n\t\t \t\t</KeypadRow>\r\n\t\t \t\t<KeypadRow>\r\n\t\t <Button id=\"four\" clicked={() => this.props.onPressNumber(4)}>4</Button>\r\n\t\t <Button id=\"five\" clicked={() => this.props.onPressNumber(5)}>5</Button>\r\n\t\t <Button id=\"six\" clicked={() => this.props.onPressNumber(6)}>6</Button>\r\n\t\t <Button id=\"substract\" type=\"operator\" clicked={() => this.props.onPressOperator(\"-\")}>-</Button>\r\n\t\t \t\t </KeypadRow>\r\n\t\t \t\t <KeypadRow>\r\n\t\t <Button id=\"one\" clicked={() => this.props.onPressNumber(1)}>1</Button>\r\n\t\t <Button id=\"two\" clicked={() => this.props.onPressNumber(2)}>2</Button>\r\n\t\t <Button id=\"three\" clicked={() => this.props.onPressNumber(3)}>3</Button>\r\n\t\t <Button id=\"add\" type=\"operator\" clicked={() => this.props.onPressOperator(\"+\")}>+</Button>\r\n\t\t \t\t</KeypadRow>\r\n\t\t \t\t<KeypadRow>\r\n\t\t <Button id=\"revert\" type=\"operator\" clicked={this.props.display ? this.props.onRevert : null}>&plusmn;</Button>\r\n\t\t <Button id=\"zero\" clicked={this.props.display ? () => this.props.onPressNumber(0) : null}>0</Button>\r\n\t\t <Button id=\"decimal\" type=\"operator\" clicked={this.props.decimal ? \"\" : this.props.onDecimal}>.</Button>\r\n\t\t <Button  id=\"equals\" type=\"operator\" clicked={this.props.operator ? this.props.onPressEquals : null}>=</Button>\r\n\t\t\t\t</KeypadRow>\r\n\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n\treturn {\r\n\tdisplay: state.display,\r\n\tprevState: state.prevState,\r\n\thistory: state.history,\r\n\tdecimal: state.decimal,\r\n\toperator: state.operator,\r\n\tupdatedNumber: state.updatedNumber\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonPressNumber: (num) => dispatch(actions.addNumber(num)),\r\n\t\tonPressOperator: (op) => dispatch(actions.addOperator(op)),\r\n\t\tonPressEquals: () => dispatch(actions.equals()),\r\n\t\tonClear: () => dispatch(actions.clear()),\r\n\t\tonDecimal: () => dispatch(actions.decimal(\".\")),\r\n\t\tonRevert: () => dispatch(actions.revert()),\r\n\t\tonPercentage: () => dispatch(actions.percentage()),\r\n\t\tonDeleted: () => dispatch(actions.deleted())\r\n\t}\t\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Display);","import * as actionTypes from \"./actionTypes\";\r\n\r\n\r\nexport const addNumber = (num) => {\r\n\treturn {\r\n\t\ttype: actionTypes.ADD_NUMBER,\r\n\t\tvalue: num\r\n\t}\r\n}\r\n\r\nexport const addOperator = (operator) => {\r\n\treturn {\r\n\t\ttype: actionTypes.ADD_OPERATOR,\r\n\t\toperator: operator\r\n\t}\r\n}\r\n\r\nexport const equals = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.EQUALS,\r\n\t}\r\n}\r\n\r\nexport const clear = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.CLEAR,\r\n\t}\r\n}\r\n\r\nexport const decimal = (decimal) => {\r\n\treturn {\r\n\t\ttype: actionTypes.DECIMAL,\r\n\t\tdecimal: decimal\r\n\t}\r\n}\r\n\r\nexport const revert = () => {\r\n\treturn {\r\n\t\ttype:actionTypes.REVERT\r\n\t}\r\n}\r\n\r\nexport const percentage = () => {\r\n\treturn {\r\n\t\ttype:actionTypes.PERCENTAGE\r\n\t}\r\n}\r\n\r\nexport const deleted = () => {\r\n\treturn {\r\n\t\ttype:actionTypes.DELETED\r\n\t}\r\n}\r\n\r\n","import React from 'react';\nimport Display from \"./container/display\";\nimport './styles/styles.css'\n\n\nfunction App() {\n  return (\n    <div className=\"app\">\n    <Display />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { Provider } from \"react-redux\";\nimport { createStore , applyMiddleware, compose} from 'redux'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from \"./store/reducers/rootReducer\"\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}